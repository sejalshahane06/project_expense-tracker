import tkinter as tk
from tkinter import ttk, messagebox
from datetime import datetime

expense_list = []

def add_item():
    cat = category_var.get()
    amt = amount_var.get()
    dt = date_var.get()
    note = note_var.get()

    if not cat or not amt or not dt or not note:
        messagebox.showwarning("Error", "Please fill all fields!")
        return
    
    try:
        amt = float(amt)
        if amt <= 0:
            messagebox.showwarning("Error", "Amount must be greater than 0!")
            return
    except:
        messagebox.showwarning("Error", "Amount must be a number!")
        return

    try:
        parsed_date = datetime.strptime(dt, "%Y-%m-%d")
        display_date = parsed_date.strftime("%d-%m-%Y")
    except:
        messagebox.showwarning("Error", "Date must be in YYYY-MM-DD format!")
        return

    expense_list.append({"Category": cat, "Amount": amt, "Date": display_date, "Note": note})
    show_data()
    clear_inputs()

def delete_item():
    selected = tree.selection()
    if not selected:
        messagebox.showwarning("Error", "Select an item to delete!")
        return
    for row in selected:
        idx = int(tree.item(row)["values"][0]) - 1
        expense_list.pop(idx)
    show_data()

def clear_inputs():
    category_var.set("")
    amount_var.set("")
    date_var.set("")
    note_var.set("")

def show_data():
    for row in tree.get_children():
        tree.delete(row)
    total = 0
    for i, exp in enumerate(expense_list, start=1):
        tag = 'evenrow' if i % 2 == 0 else 'oddrow'
        tree.insert("", tk.END, values=(i, exp["Category"], exp["Amount"], exp["Date"], exp["Note"]), tags=(tag,))
        total += exp["Amount"]
    total_var.set(f"Total: ₹{total:.2f}")

root = tk.Tk()
root.title("Expense Tracker")
root.geometry("750x520")
root.configure(bg="white")

tk.Label(root, text="Expense Tracker", font=("Segoe UI", 18, "bold"),
         bg="white", fg="black").pack(pady=15)

input_frame = tk.Frame(root, bg="light grey", bd=1, relief=tk.SOLID)
input_frame.pack(pady=10, padx=15, fill=tk.X)

label_font = ("Segoe UI", 11)

tk.Label(input_frame, text="Category:", bg="light grey", font=label_font, fg="black").grid(row=0, column=0, padx=8, pady=8, sticky="w")
category_var = tk.StringVar()
category_box = ttk.Combobox(input_frame, textvariable=category_var, state="readonly", font=label_font)
category_box["values"] = ("Food", "Travel", "Bills", "Shopping", "Other")
category_box.grid(row=0, column=1, padx=8, pady=8)

tk.Label(input_frame, text="Amount:", bg="light grey", font=label_font, fg="black").grid(row=0, column=2, padx=8, pady=8, sticky="w")
amount_var = tk.StringVar()
tk.Entry(input_frame, textvariable=amount_var, font=label_font).grid(row=0, column=3, padx=8, pady=8)

tk.Label(input_frame, text="Date (YYYY-MM-DD):", bg="light grey", font=label_font, fg="black").grid(row=1, column=0, padx=8, pady=8, sticky="w")
date_var = tk.StringVar()
tk.Entry(input_frame, textvariable=date_var, font=label_font).grid(row=1, column=1, padx=8, pady=8)

tk.Label(input_frame, text="Note:", bg="light grey", font=label_font, fg="black").grid(row=1, column=2, padx=8, pady=8, sticky="w")
note_var = tk.StringVar()
tk.Entry(input_frame, textvariable=note_var, font=label_font).grid(row=1, column=3, padx=8, pady=8)

tk.Button(input_frame, text="Add Expense", command=add_item, bg="light green", fg="black", width=14).grid(row=2, column=0, padx=8, pady=12)
tk.Button(input_frame, text="Delete Selected", command=delete_item, bg="light coral", fg="black", width=14).grid(row=2, column=1, padx=8, pady=12)
tk.Button(input_frame, text="Clear", command=clear_inputs, bg="light blue", fg="black", width=14).grid(row=2, column=2, padx=8, pady=12)

tree = ttk.Treeview(root, columns=("S.No", "Category", "Amount", "Date", "Note"), show="headings")
tree.pack(pady=15, padx=15, fill=tk.BOTH, expand=True)

for col in ("S.No", "Category", "Amount", "Date", "Note"):
    tree.heading(col, text=col)
    tree.column(col, width=130, anchor="center")

style = ttk.Style()
style.theme_use("clam")
style.configure("Treeview", background="white", foreground="black", rowheight=25, fieldbackground="white", font=("Segoe UI", 10))
style.configure("Treeview.Heading", font=("Segoe UI", 11, "bold"), background="light grey", foreground="black")

tree.tag_configure('oddrow', background="white")
tree.tag_configure('evenrow', background="gainsboro")

total_var = tk.StringVar(value="Total: ₹0.00")
tk.Label(root, textvariable=total_var, font=("Segoe UI", 13, "bold"),
         bg="white", fg="black").pack(pady=10)

root.mainloop()
